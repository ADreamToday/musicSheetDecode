C251 COMPILER V5.60.0,  main                                                               09/04/23  11:39:59  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE main.c INTR2 BROWSE DEBUG PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\
                    -Objects\main.obj) 

stmt  level    source

    1          #include <STC32G.h>
    2          #include <intrins.h>
    3          #define u8 unsigned char
    4          
    5          // IRC = 24Mhz
    6          
    7          u8 Timer0H = 0x00;
    8          u8 Timer0L = 0x00;
    9          u8 Timer0H2 = 0x00;
   10          u8 Timer0L2 = 0x00;
   11          
   12          u8 code soundTrack[][] = { {0xfd,0x33} , {0xfc,0xdb} , {0xfc,0x78} , {0xfb,0xce} , {0xfd,0x33} , {0xfc,0x
             -db} , {0xfd,0x33} , {0xfd,0xe7} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0xe7} , {0
             -xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0xa5} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33
             -} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0xa5} , {0xfd,0x33} , {0xfc,0xdb} , {0xfc,0xdb} , {0xfc,0x78} , {0xfc,0xdb} , {0xf
             -e,0x21} , {0xfc,0xdb} , {0xfc,0x78} , {0xfd,0xa5} , {0xfc,0x78} , {0xfc,0xdb} , {0xfe,0x21} , {0xfc,0xdb} , {0xfc,0x78} 
             -, {0xfc,0xdb} , {0xfc,0x78} , {0xfc,0xdb} , {0xfe,0x21} , {0xfc,0xdb} , {0xfc,0x78} , {0xfd,0xa5} , {0xfc,0x78} , {0xfc,
             -0xdb} , {0xfe,0x21} , {0xfc,0xdb} , {0xfc,0x78} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfb,0xce} , {0xfc,0xdb} , 
             -{0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0xa5} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0x
             -db} , {0xfb,0xce} , {0xfc,0x78} , {0xfe,0x3c} , {0xfe,0x21} , {0xfd,0xa5} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0
             -xfc,0xdb} , {0xfb,0xce} , {0xfc,0xdb} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0xa5} , {0xfd,0x33
             -} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfc,0x78} , {0xfb,0xce} , {0xfb,0xce} , {0xfc,0x43} , {0xfc,0x78} , {0xf
             -c,0xdb} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0x5b} , {0xfd,0xa5} , {0xfd,0xe7} , {0xfe,0x21} , {0xfe,0x3c} , {0xfe,0x6d} 
             -, {0xfe,0x99} , {0xfd,0x33} , {0xfc,0xdb} , {0xfb,0xce} , {0xfc,0xdb} , {0xfe,0x6d} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,
             -0xdb} , {0xfd,0x33} , {0xfd,0xa5} , {0xfd,0x33} , {0xfe,0x3c} , {0xfd,0x33} , {0xfc,0xdb} , {0xfb,0xce} , {0xfc,0x78} , 
             -{0xfd,0xe7} , {0xfe,0x3c} , {0xfe,0x21} , {0xfd,0xa5} , {0xfd,0x33} , {0xfe,0x99} , {0xfd,0x33} , {0xfc,0xdb} , {0xfb,0x
             -ce} , {0xfc,0xdb} , {0xfe,0x6d} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0xa5} , {0xfd,0x33} , {0
             -xfe,0x3c} , {0xfd,0x33} , {0xfc,0xdb} , {0xfc,0x78} , {0xfb,0xce} , {0xfd,0xe7} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff
             -} , {0xff,0xff} , {0xff,0xff} , {0xfb,0xce} , {0xfd,0xe7} , {0xfd,0xa5} , {0xfd,0x5b} , {0xfd,0x33} , {0xfc,0xdb} , {0xf
             -c,0x78} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfc,0x78} , {0xf8,0xf2} , {0xfc,0x78} , {0xfc,0xdb} , {0xfd,0x33} 
             -, {0xfd,0xe7} , {0xfe,0x21} , {0xfe,0x3c} , {0xfe,0x99} , {0xfd,0xe7} , {0xff,0x10} , {0xfe,0xd2} , {0xfe,0xad} , {0xfe,
             -0x99} , {0xfe,0x6d} , {0xfe,0x99} , {0xfe,0x6d} , {0xfe,0x3c} , {0xfe,0x21} , {0xfd,0xa5} , {0xfd,0x33} , {0xfc,0xdb} , 
             -{0xfd,0xa5} , {0xfd,0x5b} , {0xfd,0x33} , {0xfc,0xdb} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfb,0xce} , {0xfc,0x
             -db} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0xa5} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0
             -xfc,0xdb} , {0xfb,0xce} , {0xfc,0x78} , {0xfe,0x3c} , {0xfc,0x78} , {0xfe,0x3c} , {0xfc,0x78} , {0xfe,0x21} , {0xfc,0x43
             -} , {0xfd,0xa5} , {0xfb,0x4a} , {0xfd,0x33} , {0xfa,0x66} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfb,0xce} , {0xf
             -c,0xdb} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0xa5} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} 
             -, {0xfc,0xdb} , {0xfc,0x78} , {0xfb,0xce} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0x5b} , {0xfd,0xa5} , {0xfd,0xe7} , {0xfd,
             -0xa5} , {0xfd,0xe7} , {0xfd,0xa5} , {0xfd,0xe7} , {0xfd,0xe7} , {0xfd,0xa5} , {0xfd,0xe7} , {0xfd,0xa5} , {0xfd,0xa5} , 
             -{0xfd,0xe7} , {0xfd,0xa5} , {0xfd,0x5b} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0x
             -33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0x5b} , {0xfd,0xe7} , {0xfd,0xa5} , {0xfd,0xe7} , {0
             -xfd,0xa5} , {0xfd,0xe7} , {0xfd,0xe7} , {0xfd,0xa5} , {0xfd,0xe7} , {0xfd,0xa5} , {0xfd,0xa5} , {0xfd,0xe7} , {0xfd,0xa5
             -} , {0xfd,0x5b} , {0xfd,0x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfd,0xe7} , {0xfd,0x33} , {0xfd,0x33} , {0xfc,0xdb} , {0xf
             -d,0x33} , {0xfd,0xc6} , {0xfd,0xa5} , {0xfd,0xa5} , {0xfd,0xe7} , {0xfe,0x21} , {0xfe,0x3c} , };
   13          float code time[] = { 6.000000 , 6.000000 , 6.000000 , 6.000000 , 0.500000 , 0.500000 , 0.500000 , 0.5000
             -00 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500
             -000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.50
             -0000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.5
             -00000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.
             -500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 3.000000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0
             -.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 3.000000 , 1.000000 , 0.500000 , 0.500000 , 1.000000 , 0.500000 , 
             -0.500000 , 0.500000 , 0.500000 , 3.000000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 ,
             - 0.500000 , 0.500000 , 0.500000 , 3.000000 , 0.250000 , 0.250000 , 0.250000 , 0.250000 , 0.250000 , 0.250000 , 0.250000 
             -, 0.250000 , 0.250000 , 0.250000 , 0.250000 , 0.250000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 2.000000 , 1.000000
             - , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 2.00000
             -0 , 1.000000 , 1.000000 , 0.500000 , 0.500000 , 1.000000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 2.000000 , 1.0000
             -00 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 2.000
             -000 , 2.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 0.500000 , 0.500000 , 0.670000 , 0.670000 , 0.66
C251 COMPILER V5.60.0,  main                                                               09/04/23  11:39:59  PAGE 2   

             -0000 , 1.500000 , 0.250000 , 0.250000 , 3.500000 , 0.250000 , 0.250000 , 0.670000 , 0.670000 , 0.660000 , 0.500000 , 0.5
             -00000 , 0.500000 , 0.500000 , 3.000000 , 1.000000 , 2.000000 , 0.670000 , 0.670000 , 0.660000 , 1.000000 , 2.000000 , 0.
             -500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0
             -.500000 , 0.500000 , 0.500000 , 3.000000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 
             -0.500000 , 0.500000 , 0.500000 , 3.000000 , 0.250000 , 0.250000 , 0.250000 , 0.250000 , 0.250000 , 0.250000 , 0.250000 ,
             - 0.250000 , 0.250000 , 0.750000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 3.000000 , 0.500000 , 0.500000 , 0.500000 
             -, 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 5.000000 , 0.250000 , 0.250000 , 0.250000
             - , 0.250000 , 0.500000 , 0.500000 , 0.500000 , 1.000000 , 1.000000 , 1.000000 , 0.500000 , 0.500000 , 0.500000 , 0.50000
             -0 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 1.000000 , 1.000000 , 1.000000 , 0.500000 , 0.5000
             -00 , 1.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 1.000000 , 1.000000 , 1.000000 , 0.500000 , 0.500
             -000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 1.000000 , 1.000000 , 1.00
             -0000 , 0.500000 , 0.500000 , 0.500000 , 1.000000 , 0.250000 , 0.250000 , 0.250000 , 0.250000 , };
   14          u8 code soundTrack2[][] = { {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0
             -xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {
             -0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xf
             -f} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0x
             -ff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff}
             - , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xf9
             -,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xf7,0x9d} , {0xf9,0xb7} , {0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} ,
             - {0xfb,0x4a} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xf7,0x9d} , {0xf8,0xf2} , {0xfc,0x78} , {0xfc,0
             -x43} , {0xfb,0x4a} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xf7,0x9d} , {0xf9,0xb7} , {0xf9,0xb7} , {
             -0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xfb,0x4a} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xf8,0xf
             -2} , {0xf7,0x9d} , {0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xf7,0x9d} , {0xf9,0xb7} , {0xf9,0xb7} , {0xfa,0x66} , {0x
             -f9,0xb7} , {0xfa,0x66} , {0xfb,0x4a} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xf7,0x9d} , {0xf8,0xf2}
             - , {0xfc,0x78} , {0xfc,0x43} , {0xfb,0x4a} , {0xfa,0x66} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xff
             -,0xff} , {0xff,0xff} , {0xfb,0xce} , {0xfb,0x4a} , {0xfa,0xb8} , {0xfa,0x66} , {0xf8,0xf2} , {0xf7,0x9d} , {0xff,0xff} ,
             - {0xff,0xff} , {0xff,0xff} , {0xff,0xff} , {0xfd,0x33} , {0xfb,0xce} , {0xfe,0x21} , {0xfd,0xa5} , {0xfd,0x5b} , {0xfd,0
             -x33} , {0xfc,0xdb} , {0xfd,0x33} , {0xfc,0xdb} , {0xfc,0x78} , {0xfc,0x43} , {0xfb,0x4a} , {0xfa,0x66} , {0xf9,0xb7} , {
             -0xfb,0x4a} , {0xfa,0xb8} , {0xfa,0x66} , {0xf9,0xb7} , {0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xf7,0x9d} , {0xf9,0xb
             -7} , {0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xfb,0x4a} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0x
             -f9,0xb7} , {0xf7,0x9d} , {0xf8,0xf2} , {0xf8,0xf2} , {0xf8,0xf2} , {0xf8,0x87} , {0xf6,0x95} , {0xf4,0xce} , {0xf9,0xb7}
             - , {0xfa,0x66} , {0xf9,0xb7} , {0xf7,0x9d} , {0xf9,0xb7} , {0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xfb
             -,0x4a} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xf8,0xf2} , {0xf7,0x9d} , {0xfb,0xce} , {0xfb,0x4a} ,
             - {0xfb,0xce} , {0xfb,0x4a} , {0xfb,0xce} , {0xfb,0xce} , {0xfb,0x4a} , {0xfb,0xce} , {0xfb,0x4a} , {0xfb,0x4a} , {0xfb,0
             -xce} , {0xfb,0x4a} , {0xfa,0xb8} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xfa,0x66} , {
             -0xf9,0xb7} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xfa,0xb8} , {0xfb,0xce} , {0xfb,0x4a} , {0xfb,0xce} , {0xfb,0x4
             -a} , {0xfb,0xce} , {0xfb,0xce} , {0xfb,0x4a} , {0xfb,0xce} , {0xfb,0x4a} , {0xfb,0x4a} , {0xfb,0xce} , {0xfb,0x4a} , {0x
             -fa,0xb8} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66} , {0xfb,0xce} , {0xfa,0x66} , {0xfa,0x66} , {0xf9,0xb7} , {0xfa,0x66}
             - , {0xfb,0x8f} , {0xfb,0x4a} , };
   15          float code time2[] = { 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000
             -000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.00
             -0000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.0
             -00000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.
             -000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 0.500000 , 0.500000 , 0.500000 , 0
             -.500000 , 3.000000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 
             -0.500000 , 3.000000 , 1.000000 , 0.500000 , 0.500000 , 1.000000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 3.000000 ,
             - 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 6.000000 
             -, 0.500000 , 0.500000 , 0.500000 , 0.500000 , 3.000000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000
             - , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 3.000000 , 1.000000 , 0.500000 , 0.500000 , 1.000000 , 1.000000 , 1.00000
             -0 , 1.000000 , 1.000000 , 1.000000 , 1.000000 , 0.670000 , 0.670000 , 0.660000 , 1.500000 , 0.500000 , 2.000000 , 1.0000
             -00 , 1.000000 , 1.000000 , 1.000000 , 3.000000 , 1.000000 , 2.000000 , 0.670000 , 0.670000 , 0.660000 , 1.000000 , 2.000
             -000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.50
             -0000 , 0.500000 , 0.500000 , 0.500000 , 3.000000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.5
             -00000 , 0.500000 , 0.500000 , 0.500000 , 3.000000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 1.000000 , 0.500000 , 0.
             -500000 , 0.500000 , 0.500000 , 3.000000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0
             -.500000 , 0.500000 , 0.500000 , 6.000000 , 0.500000 , 0.500000 , 0.500000 , 1.000000 , 1.000000 , 1.000000 , 0.500000 , 
             -0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 1.000000 , 1.000000 ,
             - 1.000000 , 0.500000 , 0.500000 , 1.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 1.000000 , 1.000000 
             -, 1.000000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000 , 0.500000
             - , 1.000000 , 1.000000 , 1.000000 , 0.500000 , 0.500000 , 0.500000 , 2.000000 , };
   16          int length = 278;
   17          int speed = 90; // 120个音符代码每分钟
   18            
   19          int length2 = 222;
   20            
   21            
C251 COMPILER V5.60.0,  main                                                               09/04/23  11:39:59  PAGE 3   

   22          int Interrupttimes = 0;
   23          int Interrupttimes2 = 0;
   24            
   25            
   26          void write()
   27          {
   28   1        P00 = !P00;
   29   1      }
   30          
   31          void T0() interrupt 1
   32          {
   33   1        write();
   34   1      }
   35          
   36          void T2() interrupt 12
   37          {
   38   1        P10 = !P10;
   39   1      }
   40          
   41          void T1() interrupt 3
   42          {
   43   1        Interrupttimes++;
   44   1        Interrupttimes2++;
   45   1      }
   46          
   47          
   48          void main()
   49          {
   50   1        int i = 0;
   51   1        int singleTime = 0;
   52   1        int sign = 1;
   53   1        
   54   1        int j = 0;
   55   1        int singleTime2 = 0;
   56   1        int sign2 = 1;
   57   1        //int temple = 0;
   58   1      
   59   1        //24MHz = 20*10^6hz
   60   1        EAXFR = 1;
   61   1        WTST = 0x00;
   62   1        
   63   1        P0M0 = 0x00;
   64   1        P0M1 = 0x00;
   65   1        P1M0 = 0x00;
   66   1        P1M1 = 0x00;
   67   1        P2M0 = 0x00;
   68   1        P2M1 = 0x00;
   69   1        P3M0 = 0x00;
   70   1        P3M1 = 0x00;
   71   1        P4M0 = 0x00;
   72   1        P4M1 = 0x00;
   73   1        P5M0 = 0x00;
   74   1        P5M1 = 0x00;
   75   1        P6M0 = 0x00;
   76   1        P6M1 = 0x00;
   77   1        P7M0 = 0x00;
   78   1        P7M1 = 0x00;
   79   1        
   80   1        TMOD = 0x00;
   81   1        
   82   1        TL0 = 0x00; 
   83   1        TH0 = 0x00;   
   84   1        TL1 = 0xef; // 5ms一次中断
   85   1        TH1 = 0xd8;
   86   1        T2L = 0x00;
   87   1        T2H = 0x00;
C251 COMPILER V5.60.0,  main                                                               09/04/23  11:39:59  PAGE 4   

   88   1        
   89   1        
   90   1        TR1 = 1;
   91   1        ET1 = 1;
   92   1        
   93   1        TR0 = 1;        //start timer0
   94   1        ET0 = 0;        //允许中断
   95   1        
   96   1        T2R = 1;
   97   1        ET2 = 0;
   98   1        
   99   1        EA = 1;
  100   1        
  101   1        P00 = 0;
  102   1        P10 = 0;
  103   1        
  104   1      
  105   1      
  106   1        while(1)
  107   1        {
  108   2                  
  109   2          if (sign == 1)  //重载
  110   2          {
  111   3            singleTime = (12000 / speed) * time[i] - 4; // -4 因为要停顿
  112   3            Interrupttimes = 0;
  113   3            // 更改t0高低八位
  114   3            Timer0H = soundTrack[i][0];
  115   3            Timer0L = soundTrack[i][1];
  116   3            if (Timer0H == 0xff && Timer0L == 0xff)
  117   3            {
  118   4              ET0 = 0;        //不允许中断 停顿用
  119   4            }
  120   3            else              // 允许发声
  121   3            {
  122   4              TH0 = Timer0H;
  123   4              TL0 = Timer0L;
  124   4              ET0 = 1;
  125   4            }
  126   3            sign = 4;
  127   3          }
  128   2          else if (sign == 3) // 停顿标记
  129   2          {
  130   3            // 停顿一下
  131   3            singleTime = 4;
  132   3            Interrupttimes = 0;
  133   3            ET0 = 0;        //不允许中断
  134   3            sign = 2;
  135   3            i++;
  136   3          }
  137   2          // 判断时间到没到
  138   2          if (singleTime < Interrupttimes)
  139   2          {
  140   3            sign --;  // 设置停顿并重载标记
  141   3          }
  142   2          if (i >= length)
  143   2          {break;}
  144   2          
  145   2          
  146   2          // channel 2
  147   2          if (sign2 == 1) //重载
  148   2          {
  149   3            singleTime2 = (12000 / speed) * time2[j] - 4; // -4 因为要停顿
  150   3            Interrupttimes2 = 0;
  151   3            // 更改t0高低八位
  152   3            Timer0H2 = soundTrack2[j][0];
  153   3            Timer0L2 = soundTrack2[j][1];
C251 COMPILER V5.60.0,  main                                                               09/04/23  11:39:59  PAGE 5   

  154   3            if (Timer0H2 == 0xff && Timer0L2 == 0xff)
  155   3            {
  156   4              ET2 = 0;        //不允许中断 停顿用
  157   4            }
  158   3            else              // 允许发声
  159   3            {
  160   4              T2H = Timer0H;
  161   4              T2L = Timer0L;
  162   4              ET2 = 1;
  163   4            }
  164   3            sign2 = 4;
  165   3          }
  166   2          else if (sign2 == 3)  // 停顿标记
  167   2          {
  168   3            // 停顿一下
  169   3            singleTime2 = 4;
  170   3            Interrupttimes2 = 0;
  171   3            ET2 = 0;        //不允许中断
  172   3            sign2 = 2;
  173   3            j++;
  174   3          }
  175   2          // 判断时间到没到
  176   2          if (singleTime2 < Interrupttimes2)
  177   2          {
  178   3            sign2--;  // 设置停顿并重载标记
  179   3          }
  180   2          if (j >= length2)
  181   2          {break;}
  182   2          
  183   2      
  184   2        }
  185   1        // stop
  186   1        ET0 = 0;
  187   1        ET1 = 0;
  188   1        ET2 = 0;
  189   1        P00 = 1;
  190   1        while(1){}
  191   1        
  192   1        
  193   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      3583     ------
  ecode size           =    ------     ------
  data size            =        14     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
